net {
  # type = mainnet
  type = testnet
}

storage {
  # Directory for storing persistent data

  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, executive, executive_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node {
  # trust node for solidity node
  trustNode = "142.93.34.246:50051"

  listen.port = 18888

  connection.timeout = 2


  maxActiveNodes = 30

  active = [

  ]

  p2p {
    version = 102 # 47: testnet; 101: debug
  }

  rpc {
    port = 50051

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

}

sync {
  node.count = 30
}

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [

  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    # the account of foundation.
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "27WuXYGzxHXU7ynKDzoudJd9mS9Bw4vmbER"
      balance = "25000000000000000"
    },

    # the account of payment
    {
      accountName = "Unit"
      accountType = "AssetIssue"
      address = "27Vm12vh5Mm9HzPSWBDvbZu1U25xvyFvexF"
      balance = "10000000000000000"
    },

    # the account of coin burn
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "27WnTihwXsqCqpiNedWvtKCZHsLg5LjQ4XD"
      balance = "-9223372036854775808"
    },

    #testng001
    {
      accountName = "Testng001"
      accountType = "AssetIssue"
      address = "27YcHNYcxHGRf5aujYzWQaJSpQ4WN4fJkiU"
      balance = "10000000000000000"
    },

    #testng002
    {
      accountName = "Testng002"
      accountType = "AssetIssue"
      address = "27WvzgdLiUvNAStq2BCvA1LZisdD3fBX8jv"
      balance = "20000000000000000"
    },

    #testng003
    {
      accountName = "Testng003"
      accountType = "AssetIssue"
      address = "27iDPGt91DX3ybXtExHaYvrgDt5q5d6EtFM"
      balance = "30000000000000000"
    }
  ]

  executives = [
    {

    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localexecutive = [

]

block = {
  needSyncCheck = true
  maintenanceTimeInterval = 21600000
  proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

vm = {
  supportConstant = true
  minTimeRatio = 0.6
  maxTimeRatio = 5.0
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
}